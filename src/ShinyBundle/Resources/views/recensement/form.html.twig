{# src/ShinyBundle/Resources/views/form.html.twig #}
<div class="well">
	{{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

    {# Les erreurs générales du formulaire. #}
    {{ form_errors(form) }}

    <div class="form-group">
        <div class="col-lg-12">
            <div class="col-md-1">
                {# Génération du label. #}
                {{ form_label(form.version, "Version", {'label_attr': {'class': 'control-label'}}) }}
            </div>
            <div class="col-md-4">
                {# Génération de l'input. #}
                {{ form_widget(form.version, {'attr': {'class': 'form-control'}}) }}
            </div>
            <div class="col-md-2">
                {{ form_label(form.location, "Localisation", {'label_attr': {'class': 'control-label'}}) }}
            </div>
            <div class="col-md-4">
                {{ form_widget(form.location, {'attr': {'class': 'form-control'}}) }}
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-lg-12">
            <div class="col-md-1">
                {{ form_label(form.pokemon, "Pokémon", {'label_attr': {'class': 'control-label'}}) }}
            </div>
            <div class="col-md-4">
                {{ form_widget(form.pokemon, {'attr': {'class': 'form-control'}}) }}
            </div>
            <div class="col-md-4">
                {# Affichage des erreurs du titre #}
                {{ form_errors(form.nickname) }}
                {{ form_widget(form.nickname, {'attr': {'class': 'form-control', 'placeholder': 'Surnom (facultatif)'}}) }}
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-lg-12">
            <div class="col-md-1">
                {{ form_label(form.sexe, "Sexe", {'label_attr': {'class': 'control-label'}}) }}
            </div>
            <div class="col-md-4">
                {{ form_widget(form.sexe) }}
                {{ form_errors(form.sexe) }}
            </div>
            <div class="col-md-1">
                {{ form_label(form.level, "Niveau", {'label_attr': {'class': 'control-label'}}) }}
            </div>
            <div class="col-md-2">
                {{ form_widget(form.level, {'attr': {'class': 'form-control'}}) }}
            </div>
            {{ form_errors(form.level) }}
        </div>
    </div>

    <div class="form-group">
        <div class="col-lg-12">
            <div class="col-md-1">
                {{ form_label(form.nature, "Nature", {'label_attr': {'class': 'control-label'}}) }}
            </div>
            <div class="col-md-4">
                {{ form_widget(form.nature, {'attr': {'class': 'form-control'}}) }}
            </div>
            <div class="col-md-1">
                {{ form_label(form.pokeball, "Ball", {'label_attr': {'class': 'control-label'}}) }}
            </div>
            <div class="col-md-4">
                {{ form_widget(form.pokeball, {'attr': {'class': 'form-control'}}) }}
            </div>
		</div>
    </div>

    <div class="form-group">
        <div class="col-lg-12">
            <div class="col-md-1">
                {{ form_label(form.methode, "Méthode", {'label_attr': {'class': 'control-label'}}) }}
            </div>
            <div class="col-md-4">
                {{ form_widget(form.methode, {'attr': {'class': 'form-control'}}) }}
            </div>
            <div class="col-md-4">
                {{ form_widget(form.number, {'attr': {'class': 'form-control', 'placeholder': 'Nombre'}}) }}
                {{ form_errors(form.number) }}
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-lg-12">
            <div class="col-md-2">
                {{ form_label(form.date, "Date", {'label_attr': {'class': 'control-label input-group'}}) }}
            </div>
            <div class="col-md-3 input-group">
                {{ form_widget(form.date, {'attr': {'class': 'form-control datetimepicker '}}) }}
                <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
            </div>
        </div>
    </div>

    <div class="form-group">
      {{ form_errors(form.recit) }}

		<div class="col-lg-12">
			{{ form_widget(form.recit, {'attr': {'class': 'form-control'}}) }}
		</div>
    </div>

    {% macro tagCollectionItem(formData) %}
        <br>
        <div class="col-lg-12 input-group">
            {{ form_widget(formData.url) }}
            {{ form_errors(formData.url) }}
        </div>
    {% endmacro %}

    <div class="form-group">
        <div id="shiny_video" class="col-lg-12">
            {{ form_label(form.videos, "Vidéos", {'label_attr': {'class': 'control-label'}}) }}
            <button id="add_video" type="button" class="btn btn-default btn-add">Ajouter une vidéo</button>

            <div id="videos" data-prototype="{{  _self.tagCollectionItem(form.videos.vars.prototype)|e('html_attr') }}">
                {% for video in form.videos %}
                    {{ _self.tagCollectionItem(video) }}
                {% endfor %}
            </div>
        </div>
    </div>

    {% macro tagCollectionItem2(formData) %}
        <br>
        <div class="col-lg-12 input-group">
            {{ form_widget(formData.url) }}
            {{ form_errors(formData.url) }}
        </div>
    {% endmacro %}

    <div class="form-group">
        <div id="shiny_picture" class="col-lg-12">
            {{ form_label(form.pictures, "Photos", {'label_attr': {'class': 'control-label'}}) }}
            <button id="add_picture" type="button" class="btn btn-default btn-add">Ajouter une photo</button>

            <div id="pictures" data-prototype="{{  _self.tagCollectionItem2(form.pictures.vars.prototype)|e('html_attr') }}">
                {% for picture in form.pictures %}
                    {{ _self.tagCollectionItem2(picture) }}
                {% endfor %}
            </div>
        </div>
    </div>
    <div  align="center" class="g-recaptcha form-group col-lg-12" data-sitekey="6Ld7ozEUAAAAAP9VE0-NizBm-AXMy45qFmP3UClp">

    </div>
    <div class="form-group">
        {{ form_widget(form.save, {'attr': {'class': 'btn btn-primary pull-right'}}) }}
    </div>

  {{ form_end(form) }}
</div>
{#
#
#
#
#}

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

<script type="text/javascript" src="{{ asset('bundles/scdatetimepicker/js/bootstrap-datetimepicker.min.js') }}"></script>
<script type="text/javascript" src="{{ asset('bundles/scdatetimepicker/js/locales/bootstrap-datetimepicker.fr.js' ) }}"></script>

{#Datetimepicker#}
<script type="text/javascript">
        $('.datetimepicker').datetimepicker({
            language:  'fr',
            format: 'dd/mm/yyyy hh:ii',
            inline: true,
            sideBySide: true
        });
</script>
{#¨Pré remplissage des champs du formulaire#}
<script>
    $('#shinybundle_shiny_version').change(
        function() {
            SelectorChange($(this), 'version', 'location');
            SelectorChange($(this), 'version', 'methode');
            SelectorChange($(this), 'version', 'pokemon');
            SelectorChange($(this), 'version', 'pokeball');
    });

    function SelectorChange($container, parent, son) {

        var $selector = $('#shinybundle_shiny_' + parent);
        // ... retrieve the corresponding form.
        var $form = $container.closest('form');
        // Simulate form data, but only include the selected son value.
        var data = {};
        data[$selector.attr('name')] = $selector.val();
        // Submit data via AJAX to the form's action path.
        $.ajax({
            url : $form.attr('action'),
            type: $form.attr('method'),
            data : data,
            success: function(html) {
                // Replace current position field ...
                $('#shinybundle_shiny_' + son).replaceWith(
                        // ... with the returned one from the AJAX response.
                        $(html).find('#shinybundle_shiny_' + son)
                );
                // Position field now displays the appropriate positions.
            }
        });
    }
</script>

<script type="text/javascript">
    $(document).ready(function() {
        // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
        var $container = $('div#pictures');
        var $container2 = $('div#videos');
        // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
        var indexpicture = $container.find('input').length;
        var indexvideo = $container2.find('input').length;

        var maxvideo = 5;//On limite le nombre de vidéo
        var maxpicture = 10;//On limite le nombre de vidéo

        // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
        $('#add_picture').click(function(e) {
            add($container, 'picture');
            e.preventDefault(); // évite qu'un # apparaisse dans l'URL
            return false;
        });
        $('#add_video').click(function(e) {
            add($container2, 'video');
            e.preventDefault();
            return false;
        });

        // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'un nouveau shiny par exemple).
        if (indexpicture == 0) {
            add($container, 'picture');
        } else {
            // S'il existe déjà des images, on ajoute un lien de suppression pour chacune d'entre elles
            $container.children('div').each(function() {
                addDeleteLink($(this), 'picture');
            });
        }
        if (indexvideo == 0) {
            add($container2, 'video');
        } else {
            // S'il existe déjà des images, on ajoute un lien de suppression pour chacune d'entre elles
            $container2.children('div').each(function() {
                addDeleteLink($(this), 'video');
            });
        }

        // La fonction qui ajoute un formulaire PictureType
        function add($container, $name) {
            //On recompte le nombre d'inputs vidéo et images affichés
            var $nbvideos = $container2.find('input').length;
            var $nbpictures = $container.find('input').length;
            //On limite le nombre de vidéos et de photos
            if( $nbvideos >= maxvideo && $name == 'video')
            {
                alert('Max ' +maxvideo+ ' vidéos!');
                return false
            }
            if( $nbpictures >= maxpicture && $name == 'picture')
            {
                alert('Max ' +maxpicture+ ' photos!');
                return false
            }

            // Dans le contenu de l'attribut « data-prototype », on remplace :
            // - le texte "__name__label__" qu'il contient par le label du champ
            // - le texte "__name__" qu'il contient par le numéro du champ
            if($name == 'video') {
                var template2 = $container.attr('data-prototype')
                        .replace(/__name__label__/g, $name + (indexvideo + 1))
                        .replace(/__name__/g, indexvideo);

                // On crée un objet jquery qui contient ce template
                var $prototype2 = $(template2);
                // On ajoute le prototype modifié à la fin de la balise <div>
                $container2.append($prototype2);

                // On ajoute au prototype un lien pour pouvoir supprimer l'image
                addDeleteLink($prototype2, $name);

                // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
                indexvideo++;
            }
            else{
                var template = $container.attr('data-prototype')
                        .replace(/__name__label__/g, $name + (indexpicture + 1))
                        .replace(/__name__/g, indexpicture);

                var $prototype = $(template);
                $container.append($prototype);
                addDeleteLink($prototype, $name);
                indexpicture++;
            }
        }

        // La fonction qui ajoute un lien de suppression d'une image
        function addDeleteLink($prototype, $name) {
            // Création du lien
            var $deleteLink = $('<span class="input-group-btn"><button type="button" class="btn btn-danger btn-add">-</button></span>');
            // Ajout du lien
            $prototype.append($deleteLink);

            // Ajout du listener sur le clic du lien pour effectivement supprimer l'image
            $deleteLink.click(function(e) {
                $prototype.remove();
                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });
        }
    });
</script>